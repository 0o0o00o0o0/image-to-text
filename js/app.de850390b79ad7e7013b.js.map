{"version":3,"sources":["webpack:///./src/component/Divide.jsx","webpack:///./src/component/Button.jsx","webpack:///./src/tools/imageCommon.js","webpack:///./src/tools/imageCreater.js","webpack:///./src/component/FramesModal.jsx","webpack:///./src/component/TransformSetting.jsx","webpack:///./src/component/Row.jsx","webpack:///./src/component/ImagePreviewUpload.jsx","webpack:///./src/tools/imageToText.js","webpack:///./src/tools/imageParser.js","webpack:///./src/App.jsx","webpack:///./src/index.js"],"names":["Divide","react_default","a","createElement","className","Button","props","children","attrs","_objectWithoutProperties","classnames_default","_extends","type","IMAGE_TYPES_RE","PNG","JPG","GIF","getImageType","typeName","hasOwnProperty","test","TEXT_LINE_HEIGHT","TEXT_WIDTH","TEXT_FONT","COLOR","getFrameCanvas","div","frame","canvas","document","width","scrollWidth","height","scrollHeight","ctx","getContext","fillStyle","bgColor","fillRect","color","font","i","length","j","fillText","DEFAULT_GIF_PROPS","delay","DEFAULT_NOGIF_PROPS","createImage","option","frames","file","imageCreater_objectWithoutProperties","link","filename","name","split","join","download","cb","Object","assign","gif","gif_default","quality","workers","workerScript","on","blob","addFrame","render","imageCreater_gif","url","URL","createObjectURL","href","click","revokeObjectURL","toDataURL","noGif","DEFAULT_PLAY_DELAY","FramesModal","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","call","savePic","outputRef","current","state","playDelay","updatePlayDelay","value","playDelayInput","nextNumber","parseInt","isNaN","setState","close","ev","preventDefault","stop","open","play","frameIndex","playTimer","createRef","PureComponent","_this2","nextFrame","setTimeout","nextIndex","clearTimeout","modalClasses","modal","onClick","defaultValue","ref","placeholder","id","map","line","index","key","nextProps","TransformSetting_TransformSetting","label","htmlFor","labelFor","propTypes","prop_types_default","string","defaultProps","Row","Row_objectWithoutProperties","Row_extends","ImagePreviewUpload","ImagePreviewUpload_classCallCheck","ImagePreviewUpload_possibleConstructorReturn","size","dragEnter","isDragging","dragOver","dragLeave","drop","dataTransfer","files","previewImage","openFileInput","fileUpload","setFile","target","currentImageRef","componentRef","Component","checkImageType","reader","FileReader","readAsDataURL","addEventListener","image","Image","scaleImageContainer","setImageAndFile","src","result","alert","container","parentElement","targetWidth","previewWidth","clientWidth","ratio","targetHeight","uploadBlockClasses","active","onDragEnter","onDragOver","onDragLeave","onDrop","style","display","accept","onChange","MAX_COLOR_PIXELS","DEFAULT_AVAILABLE_TEXTS","transformImageFrame","imageData","r","g","b","grayToText","arguments","undefined","texts","gray","charRange","createGrayToTextFunc","dataArr","data","lines","h","w","push","zipFrameData","frameData","nartualCanvas","nartualCtx","naturalWidth","naturalHeight","putImageData","scaleCanvas","scaleCtx","scale","drawImage","getImageData","getImageDatas","parse_data_uri_default","gifReader","omggif","framesNum","numFrames","rawWidth","rawHeight","framePixels","Uint8ClampedArray","decodeAndBlitFrameRGBA","ImageData","imageParser_gif","imageParser_noGif","App","App_classCallCheck","App_possibleConstructorReturn","rawImage","setTransformType","transformType","setTransformWidth","transformWidth","toString","rescale","imagePreview","transform","getCurrentImage","transformResult","framesModal","component_TransformSetting","component_ImagePreviewUpload","component_FramesModal","react_dom_default","src_App","getElementById"],"mappings":"sNAQe,SAASA,IACtB,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sOCCT,SAASC,EAAOC,GAAO,IAC9BC,EAAkCD,EAAlCC,SAAUH,EAAwBE,EAAxBF,UAAcI,yHADMC,CACIH,GADJ,yBAGpC,OADAF,EAAYM,IAAWN,EAAW,OAEhCH,EAAAC,EAAAC,cAAA,SAAAQ,KAAYH,GAAOI,KAAK,SAASR,UAAWA,IACzCG,yDCfDM,GACJC,IAAK,aACLC,IAAK,eACLC,IAAK,cASA,SAASC,EAAaL,GAC3B,IAAK,IAAMM,KAAYL,EAAgB,CACrC,GAAIA,EAAeM,eAAeD,GAEhC,GADeL,EAAeK,GACnBE,KAAKR,GACd,OAAOM,GCbf,IAAMG,EAAmB,GACnBC,EAAa,EAEbC,EAAY,4DACZC,EACG,gBADHA,EAEG,sBAGT,SAASC,EAAeC,EAAKC,EAAOrB,GAClC,IAAMsB,EAASC,SAAS1B,cAAc,UACtCyB,EAAOE,MAAQJ,EAAIK,YACnBH,EAAOI,OAASN,EAAIO,aACpB,IAAMC,EAAMN,EAAOO,WAAW,MAC9BD,EAAIE,UAAY9B,EAAM+B,QACtBH,EAAII,SAAS,EAAG,EAAGV,EAAOE,MAAOF,EAAOI,QACxCE,EAAIE,UAAY9B,EAAMiC,MACtBL,EAAIM,KAAOlC,EAAMkC,KACjB,IAAK,IAAIC,EAAI,EAAGA,EAAId,EAAMe,OAAQD,IAChC,IAAK,IAAIE,EAAI,EAAGA,EAAIhB,EAAMc,GAAGC,OAAQC,IACnCT,EAAIU,SAASjB,EAAMc,GAAGE,GAAIA,EAAIrB,EAAYmB,EAAIpB,GAGlD,OAAOO,EAGT,IAAMiB,GACJR,QAASb,EACTe,MAAOf,EACPgB,KAAMjB,EACNuB,MAAO,KAgCT,IAAMC,GACJV,QAASb,EACTe,MAAOf,EACPgB,KAAMjB,GAyBD,SAASyB,EAAYC,GAAQ,IAC1BvB,EAAgCuB,EAAhCvB,IAAKwB,EAA2BD,EAA3BC,OAAQC,EAAmBF,EAAnBE,KAAS7C,yHADI8C,CACMH,GADN,wBAE5BrC,EAAOK,EAAakC,EAAKvC,MACzByC,EAAOxB,SAAS1B,cAAc,KAChCmD,EAAWH,EAAKI,KAAKC,MAAM,KAC/BF,EAASA,EAASZ,OAAS,GAAKY,EAASA,EAASZ,OAAS,GAAK,QAChEY,EAAWA,EAASG,KAAK,KACzBJ,EAAKK,SAAWJ,EACH,QAAT1C,EA1DN,SAAac,EAAKwB,EAAQ5C,EAAOqD,GAC/BrD,EAAQsD,OAAOC,UAAWhB,EAAmBvC,GAC7C,IAAMwB,EAAQJ,EAAIK,YACZC,EAASN,EAAIO,aACb6B,EAAM,IAAIC,EAAA7D,GACd8D,QAAS,GACTC,QAAS,EACTC,aAAc,qBACdpC,QAAOE,WAET8B,EAAIK,GAAG,WAAY,SAAUC,GAC3BT,EAAGS,KAEL,IAAK,IAAI3B,EAAI,EAAGA,EAAIS,EAAOR,OAAQD,IAAK,CACtC,IAAMb,EAASH,EAAeC,EAAKwB,EAAOT,GAAInC,GAC9CwD,EAAIO,SAASzC,GACXkB,MAAOxC,EAAMwC,QAGjBgB,EAAIQ,SAwCFC,CAAI7C,EAAKwB,EAAQ5C,EAAO,SAAU8D,GAChC,IAAMI,EAAMC,IAAIC,gBAAgBN,GAChCf,EAAKsB,KAAOH,EACZnB,EAAKuB,QACLH,IAAII,gBAAgBL,MAGtBnB,EAAKsB,KA/BT,SAAejD,EAAKC,EAAOrB,GAGzB,OADemB,EAAeC,EAAKC,EADnCrB,EAAQsD,OAAOC,UAAWd,EAAqBzC,IAEjCwE,UAAU,aA4BVC,CAAMrD,EAAKwB,EAAO,GAAI5C,GAClC+C,EAAKuB,6RCxGT,IAAMI,EAAqB,kBAoBzB,SAAAC,EAAY3E,gGAAO4E,CAAAC,KAAAF,GAAA,IAAAG,mKAAAC,CAAAF,MAAAF,EAAAK,WAAA1B,OAAA2B,eAAAN,IAAAO,KAAAL,KACX7E,IADW,OAAA8E,EAgCnBK,QAAU,WAORzC,GALEtB,IAAK0D,EAAKM,UAAUC,QACpBzC,OAAQkC,EAAK9E,MAAM4C,OACnBC,KAAMiC,EAAK9E,MAAM6C,KACjBL,MAAOsC,EAAKQ,MAAMC,aArCHT,EA0CnBU,gBAAkB,WAChB,IAAMC,EAAQX,EAAKY,eAAeL,QAAQI,MAEtCE,EAAaF,EAAMrD,OAASwD,SAASH,EAAO,IAAMf,EAElDmB,MAAMF,KACRA,EAAajB,GAEfI,EAAKgB,UAEHP,UAAWI,KApDIb,EAiFnBiB,MAAQ,SAAAC,GACNA,EAAGC,iBACHnB,EAAKoB,OACLpB,EAAKgB,UACHK,MAAM,KArFSrB,EAyFnBqB,KAAO,WACLrB,EAAKsB,OACLtB,EAAKgB,UACHK,MAAM,KA1FRrB,EAAKQ,OACHa,MAAM,EACNE,WAAY,EACZd,UAAWb,GAEbI,EAAKwB,UAAY,KACjBxB,EAAKY,eAAiB/F,EAAAC,EAAM2G,YAC5BzB,EAAKM,UAAYzF,EAAAC,EAAM2G,YATNzB,qUAXoBnF,EAAAC,EAAM4G,iEAyB3C3B,KAAKqB,sCA0CA,IAAAO,EAAA5B,KACL,KAAIA,KAAK7E,MAAM4C,OAAOR,QAAU,GAAhC,EAGkB,SAAZsE,IACJD,EAAKH,UAAYK,WAAW,WAC1B,IAAIC,EAAYH,EAAKnB,MAAMe,WAAa,EACpCO,IAAcH,EAAKzG,MAAM4C,OAAOR,SAClCwE,EAAY,GAEdH,EAAKX,UACHO,WAAYO,IAEdF,KACCD,EAAKnB,MAAMC,WAEhBmB,mCAII7B,KAAKyB,WACPO,aAAahC,KAAKyB,4CAoBpB,IAAMQ,EAAe1G,KACnB2G,OAAO,EACPZ,KAAMtB,KAAKS,MAAMa,OAEnB,OACExG,EAAAC,EAAAC,cAAA,OAAKC,UAAWgH,GACdnH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,KAAGwE,KAAK,IAAIvE,UAAU,cAAckH,QAASnC,KAAKkB,OAAlD,KACApG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,WAEFH,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACZ+E,KAAK7E,MAAM6C,MAAiC,cAAzBgC,KAAK7E,MAAM6C,KAAKvC,KAClCX,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SACEoH,aAAcvC,EACd5E,UAAU,mBACVoH,IAAKrC,KAAKa,eACVyB,YAAY,cACdxH,EAAAC,EAAAC,cAACE,GAAOD,UAAU,aAAakH,QAASnC,KAAKW,iBAA7C,eAGO,KAEX7F,EAAAC,EAAAC,cAACE,GAAOD,UAAU,WAAWkH,QAASnC,KAAKM,SAA3C,UAIFxF,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKuH,GAAG,oBAAoBtH,UAAU,oBAAoBoH,IAAKrC,KAAKO,WACjEP,KAAK7E,MAAM4C,OAAOR,OACfyC,KAAK7E,MAAM4C,OAAOiC,KAAKS,MAAMe,YAAYgB,IAAI,SAACC,EAAMC,GAAP,OAAiB5H,EAAAC,EAAAC,cAAA,OAAK2H,IAAKD,GAAQD,KAChF,4DAnHgBG,GAC9B,OAAIA,EAAU5E,MAGVwD,WAAY,GAGT,kWC/CUqB,grBAAyB/H,EAAAC,EAAM4G,mDAYhD,OACE7G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACZ+E,KAAK7E,MAAM2H,MAAQhI,EAAAC,EAAAC,cAAA,SAAO+H,QAAS/C,KAAK7E,MAAM6H,UAAWhD,KAAK7E,MAAM2H,OAAiB,KACrF9C,KAAK7E,MAAMC,mBAfCyH,EACZI,WACLH,MAAOI,EAAAnI,EAAUoI,OACjBH,SAAUE,EAAAnI,EAAUoI,QAHHN,EAMZO,cACLN,MAAO,GACPE,SAAU,gLCFC,SAASK,EAAIlI,GAAO,IAC3BC,EAAkCD,EAAlCC,SAAUH,EAAwBE,EAAxBF,UAAcI,yHADGiI,CACOnI,GADP,yBAGjC,OADAF,EAAYM,IAAWN,EAAW,OAEhCH,EAAAC,EAAAC,cAAA,MAAAuI,KAASlI,GAAOJ,UAAWA,IACxBG,sTCSL,SAAAoI,EAAYrI,gGAAOsI,CAAAzD,KAAAwD,GAAA,IAAAvD,mKAAAyD,CAAA1D,MAAAwD,EAAArD,WAAA1B,OAAA2B,eAAAoD,IAAAnD,KAAAL,KACX7E,IADW,OAAA8E,EAoBnB0D,KAAO,WACL,OACEhH,MAAOsD,EAAKQ,MAAM9D,MAClBE,OAAQoD,EAAKQ,MAAM5D,SAvBJoD,EA2BnB2D,UAAY,SAAAzC,GACVA,EAAGC,iBACHnB,EAAKgB,UACH4C,YAAY,KA9BG5D,EAkCnB6D,SAAW,SAAA3C,GACTA,EAAGC,kBAnCcnB,EAsCnB8D,UAAY,SAAA5C,GACVA,EAAGC,iBACHnB,EAAKgB,UACH4C,YAAY,KAzCG5D,EA6CnB+D,KAAO,SAAA7C,GACLA,EAAGC,iBACHnB,EAAKgB,UACH4C,YAAY,IAEd,IAAM7F,EAAOmD,EAAG8C,aAAaC,MAAM,GACnCjE,EAAKkE,aAAanG,IAnDDiC,EAsDnBmE,cAAgB,WACdnE,EAAKoE,WAAW7D,QAAQf,SAvDPQ,EA0DnBqE,QAAU,SAAAnD,GACR,IAAMnD,EAAOmD,EAAGoD,OAAOL,MAAM,GACzBlG,GACFiC,EAAKkE,aAAanG,IA3DpBiC,EAAKQ,OACHoD,YAAY,EACZlH,MAAO,IACPE,OAAQ,KAMVoD,EAAKoE,WAAavJ,EAAAC,EAAM2G,YACxBzB,EAAKuE,gBAAkB1J,EAAAC,EAAM2G,YAC7BzB,EAAKwE,aAAe3J,EAAAC,EAAM2G,YAbTzB,qUAb2BnF,EAAAC,EAAM2J,wDA8BlD,OAAO1E,KAAKwE,gBAAgBhE,6CAsDjBxC,GAAM,IAAA4D,EAAA5B,KACjB,GLzEG,SAAwBvE,GAC7B,IAAK,IAAMM,KAAYL,EACrB,GAAIA,EAAeM,eAAeD,IACjBL,EAAeK,GACnBE,KAAKR,GACd,OAAO,EAIb,OAAO,EKgEAkJ,CAAe3G,EAAKvC,MAAzB,CAIA,IAAMmJ,EAAS,IAAIC,WACnBD,EAAOE,cAAc9G,GACrB4G,EAAOG,iBAAiB,OAAQ,WAC9B,IAAMC,EAAQ,IAAIC,MAClBD,EAAMD,iBAAiB,OAAQ,WAC7BnD,EAAKsD,oBAAoBF,GACzBpD,EAAKzG,MAAMgK,gBAAgBH,EAAOhH,KAEpCgH,EAAMI,IAAMR,EAAOS,cAXnBC,MAAM,yDAoBUN,GACbA,IAEHA,EAAQhF,KAAK7E,MAAM6J,OAErB,IAAMO,EAAYvF,KAAKyE,aAAajE,QAAQgF,cACxCC,EAAczF,KAAK7E,MAAMuK,aAG7B,GAAKD,GAOE,GAAIA,EAAcF,EAAUI,YAEjC,YADAL,MAAM,yBANNG,EAAcF,EAAUI,YAEpBX,EAAMrI,MAAQ8I,IAChBA,EAAcT,EAAMrI,OAOxB,IAAMiJ,EAAQZ,EAAMrI,MAAQ8I,EACtBI,EAAeb,EAAMnI,OAAS+I,EACpC5F,KAAKiB,UACHtE,MAAO8I,EACP5I,OAAQgJ,qCAKV,IAAMC,EAAqBvK,IAAW,sBAAuBwK,OAAQ/F,KAAKS,MAAMoD,YAAa7D,KAAK7E,MAAMF,WACxG,OACEH,EAAAC,EAAAC,cAAA,OACEgL,YAAahG,KAAK4D,UAClBqC,WAAYjG,KAAK8D,SACjBoC,YAAalG,KAAK+D,UAClBoC,OAAQnG,KAAKgE,KACb7B,QAASnC,KAAKoE,cACdnJ,UAAW6K,EACXM,OAASzJ,MAAOqD,KAAKS,MAAM9D,MAAOE,OAAQmD,KAAKS,MAAM5D,QACrDwF,IAAKrC,KAAKyE,cAEV3J,EAAAC,EAAAC,cAAA,SAAOS,KAAK,OAAO2K,OAASC,QAAS,QAAUC,OAAO,UAAUjE,IAAKrC,KAAKqE,WAAYkC,SAAUvG,KAAKsE,UACrGxJ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,QACC+E,KAAK7E,MAAM6J,MAAQlK,EAAAC,EAAAC,cAAA,OAAKqH,IAAKrC,KAAKwE,gBAAiBY,IAAKpF,KAAK7E,MAAM6J,MAAMI,IAAKnK,UAAU,kBAAqB,eCrJtH,IAAMuL,EAAmB,IACnBC,EAA0B,kBA6BzB,SAASC,EAAoBC,GAKlC,IALkF,IAlCjEC,EAAGC,EAAGC,EAkCsBC,EAAqCC,UAAAzJ,OAAA,QAAA0J,IAAAD,UAAA,GAAAA,UAAA,GAtB7E,WAA+D,IAAjCE,EAAiCF,UAAAzJ,OAAA,QAAA0J,IAAAD,UAAA,GAAAA,UAAA,GAAzBP,EAY3C,OALA,SAAoBU,GAClB,IAAMC,EAAYZ,EAAmBU,EAAM3J,OAC3C,OAAO2J,EAAOC,EAAOC,GAAc,GAAG,IAakBC,GACpDC,EAAUX,EAAUY,KACpB5K,EAAQgK,EAAUhK,MAClBE,EAAS8J,EAAU9J,OACnB2K,KACGC,EAAI,EAAGA,EAAI5K,EAAQ4K,GAAK,GAAI,CAEnC,IADA,IAAIhF,EAAO,GACFiF,EAAI,EAAGA,EAAI/K,EAAO+K,GAAK,EAAG,CACjC,IAAMpK,EAAsB,GAAjBoK,EAAI/K,EAAQ8K,GAEvBhF,GAAQsE,GA5CKH,EA2CUU,EAAQhK,GA3CfuJ,EA2CmBS,EAAQhK,EAAI,GA3C5BwJ,EA2CgCQ,EAAQhK,EAAI,GA1C5D,KAAQsJ,EAAI,KAAQC,EAAI,KAAQC,IA6CrCU,EAAMG,KAAKlF,GAEb,OAAO+E,oGC9CT,SAASI,EAAaC,EAAW7C,GAK/B,IAAM8C,EAAgBpL,SAAS1B,cAAc,UACvC+M,EAAaD,EAAc9K,WAAW,MAC5C8K,EAAcnL,MAAQqI,EAAMgD,aAC5BF,EAAcjL,OAASmI,EAAMiD,cAC7BF,EAAWG,aAAaL,EAAW,EAAG,GAGtC,IAAMM,EAAczL,SAAS1B,cAAc,UACrCoN,EAAWD,EAAYnL,WAAW,MACxCmL,EAAYxL,MAAQqI,EAAMrI,MAC1BwL,EAAYtL,OAASmI,EAAMnI,OAC3B,IAAM+I,EAAQZ,EAAMrI,MAAQqI,EAAMgD,aAKlC,OAJAI,EAASC,MAAMzC,EAAOA,GAEtBwC,EAASE,UAAUR,EAAe,EAAG,GAE9BM,EAASG,aAAa,EAAG,EAAGvD,EAAMrI,MAAOqI,EAAMnI,QAsDjD,SAAS2L,EAAcxD,EAAOhH,GAEnC,MAAa,QADAlC,EAAakC,EAAKvC,MA9CjC,SAAauJ,GAOX,IAPkB,IACVuC,EAASkB,IAAazD,EAAMI,KAA5BmC,KACFmB,EAAY,IAAIC,EAAA,UAAUpB,GAC1BqB,EAAYF,EAAUG,YACbC,EAAgCJ,EAAvC/L,MAAyBoM,EAAcL,EAAtB7L,OAEnBkB,KACET,EAAI,EAAGA,EAAIsL,EAAWtL,IAAK,CACjC,IAAM0L,EAAc,IAAIC,kBAAkBH,EAAWC,EAH/B,GAItBL,EAAUQ,uBAAuB5L,EAAG0L,GACpC,IAAMnB,EAAY,IAAIsB,UAAUH,EAAaF,EAAUC,GACvDhL,EAAO4J,KAAKC,EAAaC,EAAW7C,IAEtC,OAAOjH,EAmCEqL,CAAIpE,GA1Bf,SAAeA,GACb,IAAMvI,EAASC,SAAS1B,cAAc,UAChC+B,EAAMN,EAAOO,WAAW,MACxB4I,EAAQZ,EAAMrI,MAAQqI,EAAMgD,aAQlC,OANAvL,EAAOE,MAAQqI,EAAMrI,MACrBF,EAAOI,OAASmI,EAAMnI,OACtBE,EAAIsL,MAAMzC,EAAOA,GAEjB7I,EAAIuL,UAAUtD,EAAO,EAAG,IACNjI,EAAIwL,aAAa,EAAG,EAAGvD,EAAMrI,MAAOqI,EAAMnI,SAkBnDwM,CAAMrE,8QC/Ef,SAAAsE,iGAAcC,CAAAvJ,KAAAsJ,GAAA,IAAArJ,mKAAAuJ,CAAAxJ,MAAAsJ,EAAAnJ,WAAA1B,OAAA2B,eAAAkJ,IAAAjJ,KAAAL,OAAA,OAAAC,EAYdkF,gBAAkB,SAACsE,EAAUzL,GAC3BiC,EAAKgB,UAAUwI,WAAUzL,UAbbiC,EAgBdyJ,iBAAmB,SAACvI,GAClBlB,EAAKgB,UACH0I,cAAexI,EAAGoD,OAAO3D,SAlBfX,EAsBd2J,kBAAoB,SAACzI,GACnB,IAAMP,EAAQO,EAAGoD,OAAO3D,MAElBE,EAAaF,EAAMrD,OAASwD,SAASH,EAAO,IAAM,EAEpDI,MAAMF,IAGVb,EAAKgB,UAEH4I,eAAgB/I,EAAWgJ,cAhCjB7J,EAoCd8J,QAAU,WACR9J,EAAK+J,aAAaxJ,QAAQ0E,uBArCdjF,EA6CdgK,UAAY,WAIV,IAGMlM,EADayK,EAFLvI,EAAK+J,aAAaxJ,QAAQ0J,kBAC3BjK,EAAKQ,MAAMzC,MAEEwE,IAAI,SAAAmE,GAC5B,OAAOD,EAAoBC,KAE7B1G,EAAKgB,UACHkJ,gBAAiBpM,GAChB,WACDkC,EAAKmK,YAAY5J,QAAQc,UAxD3BrB,EAAKQ,OACHoJ,eAAgB,GAChBM,mBACAV,SAAU,KACVzL,KAAM,MAERiC,EAAK+J,aAAelP,EAAAC,EAAM2G,YAC1BzB,EAAKmK,YAActP,EAAAC,EAAM2G,YATbzB,qUADiBnF,EAAAC,EAAM2J,+CAgEnC,OACE5J,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,aAEFH,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAACqI,GAAIpI,UAAU,8BACbH,EAAAC,EAAAC,cAACqP,GAAiBvH,MAAM,UAAUE,SAAS,kBACzClI,EAAAC,EAAAC,cAAA,SAAOS,KAAK,SAAS8G,GAAG,iBAAiBtH,UAAU,uBAAuBmD,KAAK,iBAAiBwC,MAAOZ,KAAKS,MAAMoJ,eAAgBtD,SAAUvG,KAAK4J,qBAKnJ9O,EAAAC,EAAAC,cAACE,GAAOiH,QAASnC,KAAK+J,SAAtB,QACAjP,EAAAC,EAAAC,cAACE,GAAOiH,QAASnC,KAAKiK,WAAtB,SAEFnP,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAACqI,EAAD,KACEvI,EAAAC,EAAAC,cAACsP,GAAmBtM,KAAMgC,KAAKS,MAAMzC,KAAMgH,MAAOhF,KAAKS,MAAMgJ,SAAUtE,gBAAiBnF,KAAKmF,gBAAiBO,aAAc3E,SAASf,KAAKS,MAAMoJ,gBAAiBxH,IAAKrC,KAAKgK,gBAE7KlP,EAAAC,EAAAC,cAACuP,GAAYlI,IAAKrC,KAAKoK,YAAarM,OAAQiC,KAAKS,MAAM0J,gBAAiBnM,KAAMgC,KAAKS,MAAMzC,2ECpFjGwM,EAAAzP,EAASoE,OAAOrE,EAAAC,EAAAC,cAACyP,EAAD,MAAS/N,SAASgO,eAAe","file":"js/app.de850390b79ad7e7013b.js","sourcesContent":["import React from 'react'\n\n/**\n * 分割线组件\n *\n * @export\n * @returns\n */\nexport default function Divide() {\n  return <div className=\"divide\" />\n}\n","import React from 'react'\nimport classNames from 'classnames'\n\n/**\n * 按钮组件\n *\n * @export\n * @param {React.ButtonHTMLAttributes<HTMLButtonElement>} props\n * @returns\n */\nexport default function Button(props) {\n  let { children, className, ...attrs } = props\n  className = classNames(className, 'btn')\n  return (\n    <button {...attrs} type=\"button\" className={className}>\n      {children}\n    </button>\n  )\n}\n","const IMAGE_TYPES_RE = {\n  PNG: /image\\/png/,\n  JPG: /image\\/jpe?g/,\n  GIF: /image\\/gif/,\n}\n\n/**\n * 获取图片类型(png, jpg, gif)\n *\n * @param {string} type\n * @returns\n */\nexport function getImageType(type) {\n  for (const typeName in IMAGE_TYPES_RE) {\n    if (IMAGE_TYPES_RE.hasOwnProperty(typeName)) {\n      const typeRe = IMAGE_TYPES_RE[typeName]\n      if (typeRe.test(type)) {\n        return typeName\n      }\n    }\n  }\n}\n\nexport function checkImageType(type) {\n  for (const typeName in IMAGE_TYPES_RE) {\n    if (IMAGE_TYPES_RE.hasOwnProperty(typeName)) {\n      const typeRe = IMAGE_TYPES_RE[typeName]\n      if (typeRe.test(type)) {\n        return true\n      }\n    }\n  }\n  return false\n}","import GIF from 'gif.js'\n// import { GifWriter } from 'omggif'\nimport { getImageType } from './imageCommon'\n\nconst TEXT_LINE_HEIGHT = 12\nconst TEXT_WIDTH = 6\n// pre标签下的字体\nconst TEXT_FONT = 'normal normal 400 normal 12px / 12px monospace, monospace'\nconst COLOR = {\n  BLACK: 'rgba(0,0,0,1)',\n  WHITE: 'rgba(255,255,255,1)'\n}\n\nfunction getFrameCanvas(div, frame, props) {\n  const canvas = document.createElement('canvas')\n  canvas.width = div.scrollWidth\n  canvas.height = div.scrollHeight\n  const ctx = canvas.getContext('2d')\n  ctx.fillStyle = props.bgColor\n  ctx.fillRect(0, 0, canvas.width, canvas.height)\n  ctx.fillStyle = props.color\n  ctx.font = props.font\n  for (let i = 0; i < frame.length; i++) {\n    for (let j = 0; j < frame[i].length; j++) {\n      ctx.fillText(frame[i][j], j * TEXT_WIDTH, i * TEXT_LINE_HEIGHT)\n    }\n  }\n  return canvas\n}\n\nconst DEFAULT_GIF_PROPS = {\n  bgColor: COLOR.WHITE,\n  color: COLOR.BLACK,\n  font: TEXT_FONT,\n  delay: 300\n}\n/**\n * 创建gif图片\n *\n * @param {HTMLDivElement} div\n * @param {string[][]} frames\n * @param {object} props\n * @returns\n */\nfunction gif(div, frames, props, cb) {\n  props = Object.assign({}, DEFAULT_GIF_PROPS, props)\n  const width = div.scrollWidth\n  const height = div.scrollHeight\n  const gif = new GIF({\n    quality: 10,\n    workers: 2,\n    workerScript: './js/gif.worker.js',\n    width, height\n  })\n  gif.on('finished', function (blob) {\n    cb(blob)\n  })\n  for (let i = 0; i < frames.length; i++) {\n    const canvas = getFrameCanvas(div, frames[i], props)\n    gif.addFrame(canvas, {\n      delay: props.delay\n    })\n  }\n  gif.render()\n}\n\nconst DEFAULT_NOGIF_PROPS = {\n  bgColor: COLOR.WHITE,\n  color: COLOR.BLACK,\n  font: TEXT_FONT\n}\n/**\n * 创建非gif图片(jpg)\n *\n * @param {HTMLDivElement} div\n * @param {string[]} frame\n * @param {object} props\n * @returns\n */\nfunction noGif(div, frame, props) {\n  props = Object.assign({}, DEFAULT_NOGIF_PROPS, props)\n  const canvas = getFrameCanvas(div, frame, props)\n  return canvas.toDataURL('image/png')\n}\n\n/**\n * 创建新的图片\n *\n * @export\n * @param {object} option\n * @param {HTMLDivElement} option.div\n * @param {string[][]} option.frames\n * @param {File} option.file\n */\nexport function createImage(option) {\n  const { div, frames, file, ...props } = option\n  const type = getImageType(file.type)\n  const link = document.createElement('a')\n  let filename = file.name.split('.')\n  filename[filename.length - 2] = filename[filename.length - 2] + '-text'\n  filename = filename.join('.')\n  link.download = filename\n  if (type === 'GIF') {\n    gif(div, frames, props, function (blob) {\n      const url = URL.createObjectURL(blob)\n      link.href = url\n      link.click()\n      URL.revokeObjectURL(url)\n    })\n  } else {\n    link.href = noGif(div, frames[0], props)\n    link.click()\n  }\n}\n","import React from 'react'\nimport classNames from 'classnames'\nimport Button from './Button'\nimport Divide from './Divide'\nimport { createImage } from '../tools/imageCreater'\nimport '../style/modal.css'\n\nconst DEFAULT_PLAY_DELAY = 300\n\n/**\n * 显示图片转字符结果的模态框\n *\n * @export\n * @class FramesModal\n * @extends {React.PureComponent}\n */\nexport default class FramesModal extends React.PureComponent {\n\n  /**\n   * Creates an instance of FramesModal.\n   *\n   * @param {object} props\n   * @param {string[][]} props.frames\n   * @param {File} props.file\n   *\n   * @memberof FramesModal\n   */\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      frameIndex: 0,\n      playDelay: DEFAULT_PLAY_DELAY\n    }\n    this.playTimer = null\n    this.playDelayInput = React.createRef()\n    this.outputRef = React.createRef()\n  }\n\n  componentWillUnmount() {\n    // 组件销毁时，取消定时器\n    this.stop()\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.file) {\n      // 更换文件时，将播放帧序号重置回0\n      return {\n        frameIndex: 0\n      }\n    }\n    return null\n  }\n\n  /**\n   * 保存图片为文件\n   *\n   * @memberof FramesModal\n   */\n  savePic = () => {\n    const createOption = {\n      div: this.outputRef.current,\n      frames: this.props.frames,\n      file: this.props.file,\n      delay: this.state.playDelay\n    }\n    createImage(createOption)\n  }\n\n  updatePlayDelay = () => {\n    const value = this.playDelayInput.current.value\n    // 退格到无数字时，设置为默认间隔\n    let nextNumber = value.length ? parseInt(value, 10) : DEFAULT_PLAY_DELAY\n    // 值为非数字时，直接返回\n    if (isNaN(nextNumber)) {\n      nextNumber = DEFAULT_PLAY_DELAY\n    }\n    this.setState({\n      // 设置为字符串，防止出现0开头数字的不正确显示\n      playDelay: nextNumber\n    })\n  }\n\n  play() {\n    if (this.props.frames.length <= 1) {\n      return\n    }\n    const nextFrame = () => {\n      this.playTimer = setTimeout(() => {\n        let nextIndex = this.state.frameIndex + 1\n        if (nextIndex === this.props.frames.length) {\n          nextIndex = 0\n        }\n        this.setState({\n          frameIndex: nextIndex\n        })\n        nextFrame()\n      }, this.state.playDelay)\n    }\n    nextFrame()\n  }\n\n  stop() {\n    if (this.playTimer) {\n      clearTimeout(this.playTimer)\n    }\n  }\n\n  close = ev => {\n    ev.preventDefault()\n    this.stop()\n    this.setState({\n      open: false\n    })\n  }\n\n  open = () => {\n    this.play()\n    this.setState({\n      open: true\n    })\n  }\n\n  render() {\n    const modalClasses = classNames({\n      modal: true,\n      open: this.state.open\n    })\n    return (\n      <div className={modalClasses}>\n        <div className=\"modal-overlay\" />\n        <div className=\"modal-box\">\n          <div className=\"modal-header\">\n            <a href=\"#\" className=\"modal-close\" onClick={this.close}>X</a>\n            <h3 className=\"modal-title\">图片转化结果</h3>\n          </div>\n          <Divide />\n          <div className=\"output-options\">\n            {this.props.file && this.props.file.type === 'image/gif' ?\n              <span>\n                <input\n                  defaultValue={DEFAULT_PLAY_DELAY}\n                  className=\"play-delay-input\"\n                  ref={this.playDelayInput}\n                  placeholder=\"播放帧间隔(ms)\" />\n                <Button className=\"update-btn\" onClick={this.updatePlayDelay}>\n                  更新间隔时间(ms)\n                </Button>\n              </span>: null\n            }\n            <Button className=\"save-btn\" onClick={this.savePic}>\n              保存为图片\n            </Button>\n          </div>\n          <Divide />\n          <div className=\"output-text-wrapper\">\n            <div id=\"output-text-block\" className=\"output-text-block\" ref={this.outputRef}>\n              {this.props.frames.length\n                ? this.props.frames[this.state.frameIndex].map((line, index) => <pre key={index}>{line}</pre>)\n                : null}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport '../style/transformSetting.css'\n\nexport default class TransformSetting extends React.PureComponent {\n  static propTypes = {\n    label: PropTypes.string,\n    labelFor: PropTypes.string\n  }\n\n  static defaultProps = {\n    label: '',\n    labelFor: ''\n  }\n\n  render() {\n    return (\n      <div className=\"transform-setting\">\n        {this.props.label ? <label htmlFor={this.props.labelFor}>{this.props.label}</label> : null}\n        {this.props.children}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport classNames from 'classnames'\n\n/**\n * 行组件\n *\n * @export\n * @param {React.HTMLAttributes<HTMLDivElement>} props\n * @returns\n */\nexport default function Row(props) {\n  let { children, className, ...attrs } = props\n  className = classNames(className, 'row')\n  return (\n    <div {...attrs} className={className}>\n      {children}\n    </div>\n  )\n}\n","import React from 'react'\nimport classNames from 'classnames'\nimport { checkImageType } from '../tools/imageCommon'\nimport '../style/imagePreviewUpload.css'\n/**\n * 图片上传预览组件\n *\n * @export\n * @class ImagePreviewUpload\n * @extends {React.Component}\n */\nexport default class ImagePreviewUpload extends React.Component {\n\n  /**\n   * Creates an instance of ImagePreviewUpload.\n   *\n   * @param {object} props\n   * @param {HTMLImageElement} props.image\n   * @param {File} props.file\n   * @param {number} props.previewWidth\n   * @param {Function} props.setImageAndFile\n   *\n   * @memberof ImagePreviewUpload\n   */\n  constructor(props) {\n    super(props)\n    this.state = {\n      isDragging: false,\n      width: 400,\n      height: 250\n    }\n\n    /**\n     * @type {React.RefObject<HTMLInputElement>}\n     */\n    this.fileUpload = React.createRef()\n    this.currentImageRef = React.createRef()\n    this.componentRef = React.createRef()\n  }\n\n  getCurrentImage() {\n    return this.currentImageRef.current\n  }\n\n  size = () => {\n    return {\n      width: this.state.width,\n      height: this.state.height\n    }\n  }\n\n  dragEnter = ev => {\n    ev.preventDefault()\n    this.setState({\n      isDragging: true\n    })\n  }\n\n  dragOver = ev => {\n    ev.preventDefault()\n  }\n\n  dragLeave = ev => {\n    ev.preventDefault()\n    this.setState({\n      isDragging: false\n    })\n  }\n\n  drop = ev => {\n    ev.preventDefault()\n    this.setState({\n      isDragging: false\n    })\n    const file = ev.dataTransfer.files[0]\n    this.previewImage(file)\n  }\n\n  openFileInput = () => {\n    this.fileUpload.current.click()\n  }\n\n  setFile = ev => {\n    const file = ev.target.files[0]\n    if (file) {\n      this.previewImage(file)\n    }\n  }\n\n  /**\n   * 预览图片文件\n   *\n   * @param {File} file\n   * @memberof ImagePreviewUpload\n   */\n  previewImage(file) {\n    if (!checkImageType(file.type)) {\n      alert('不支持该格式的文件')\n      return\n    }\n    const reader = new FileReader()\n    reader.readAsDataURL(file)\n    reader.addEventListener('load', () => {\n      const image = new Image()\n      image.addEventListener('load', () => {\n        this.scaleImageContainer(image)\n        this.props.setImageAndFile(image, file)\n      })\n      image.src = reader.result\n    })\n  }\n\n  /**\n   * 等比例缩放图片尺寸\n   *\n   * @param {HTMLImageElement} image\n   */\n  scaleImageContainer(image) {\n    if (!image) {\n      // 不传递image时，使用当前的image（App组件传递）\n      image = this.props.image\n    }\n    const container = this.componentRef.current.parentElement\n    let targetWidth = this.props.previewWidth\n\n    // 缩放宽度检测\n    if (!targetWidth) {\n      // 没有指定宽度(或为0), 使用容器宽度\n      targetWidth = container.clientWidth\n      // 容器宽度比图片原宽度大，使用图片原宽度\n      if (image.width < targetWidth) {\n        targetWidth = image.width\n      }\n    } else if (targetWidth > container.clientWidth) {\n      alert('超过容器大小！请重新输入图片宽度')\n      return\n    }\n\n    const ratio = image.width / targetWidth\n    const targetHeight = image.height / ratio\n    this.setState({\n      width: targetWidth,\n      height: targetHeight\n    })\n  }\n\n  render() {\n    const uploadBlockClasses = classNames('upload-image-block', {active: this.state.isDragging}, this.props.className)\n    return (\n      <div\n        onDragEnter={this.dragEnter}\n        onDragOver={this.dragOver}\n        onDragLeave={this.dragLeave}\n        onDrop={this.drop}\n        onClick={this.openFileInput}\n        className={uploadBlockClasses}\n        style={{ width: this.state.width, height: this.state.height }}\n        ref={this.componentRef}\n      >\n        <input type=\"file\" style={{ display: 'none' }} accept=\"image/*\" ref={this.fileUpload} onChange={this.setFile} />\n        <span className=\"upload-label\">上传图片</span>\n        {this.props.image ? <img ref={this.currentImageRef} src={this.props.image.src} className=\"preview-image\" /> : null}\n      </div>\n    )\n  }\n}\n","/**\n * 获取rbg颜色的灰度\n *\n * @param {number} r\n * @param {number} g\n * @param {number} b\n * @returns\n */\nfunction rgbToGray(r, g, b) {\n  return 0.299 * r + 0.578 * g + 0.114 * b\n}\n\nconst MAX_COLOR_PIXELS = 255\nconst DEFAULT_AVAILABLE_TEXTS = '@#&$%O!~;*^+-. '\n/**\n * 灰度转字符函数生成器\n *\n * @param {string | Array<string>} texts\n * @returns\n */\nexport function createGrayToTextFunc(texts = DEFAULT_AVAILABLE_TEXTS) {\n  /**\n   * 灰度转字符函数\n   *\n   * @param {number} gray\n   * @returns\n   */\n  function grayToText(gray) {\n    const charRange = MAX_COLOR_PIXELS / texts.length\n    return texts[(gray / charRange) >> 0][0] // 只取第一个字符\n  }\n\n  return grayToText\n}\n\n/**\n * 将图像的一帧转成字符数组\n *\n * @param {ImageData} imageData\n * @param {Function} [grayToText=defaultGrayToText]\n * @returns\n */\nexport function transformImageFrame(imageData, grayToText = createGrayToTextFunc()) {\n  const dataArr = imageData.data\n  const width = imageData.width\n  const height = imageData.height\n  const lines = []\n  for (let h = 0; h < height; h += 12) {\n    let line = ''\n    for (let w = 0; w < width; w += 6) {\n      const i = (w + width * h) * 4\n      const gray = rgbToGray(dataArr[i], dataArr[i + 1], dataArr[i + 2])\n      line += grayToText(gray)\n    }\n    lines.push(line)\n  }\n  return lines\n}\n","import { GifReader } from 'omggif'\nimport parseDataUri from 'parse-data-uri'\nimport { getImageType } from './imageCommon'\n\n/**\n * 通过缩放比例压缩帧\n *\n * @param {ImageData} frameData\n * @param {HTMLImageElement} image\n */\nfunction zipFrameData(frameData, image) {\n  // 方法来源：\n  // https://stackoverflow.com/questions/3448347/how-to-scale-an-imagedata-in-html-canvas\n\n  // 存放一帧原图像到canvas中\n  const nartualCanvas = document.createElement('canvas')\n  const nartualCtx = nartualCanvas.getContext('2d')\n  nartualCanvas.width = image.naturalWidth\n  nartualCanvas.height = image.naturalHeight\n  nartualCtx.putImageData(frameData, 0, 0)\n\n  // 新建一个canvas，宽高设为目标宽高，并进行画布缩放\n  const scaleCanvas = document.createElement('canvas')\n  const scaleCtx = scaleCanvas.getContext('2d')\n  scaleCanvas.width = image.width\n  scaleCanvas.height = image.height\n  const ratio = image.width / image.naturalWidth\n  scaleCtx.scale(ratio, ratio)\n  // 将保存的原图像使用drawImage绘制到新画布上\n  scaleCtx.drawImage(nartualCanvas, 0, 0)\n\n  return scaleCtx.getImageData(0, 0, image.width, image.height)\n}\n\n/**\n * 获取gif图像信息\n *\n * @param {HTMLImageElement} image\n * @returns\n */\nfunction gif(image) {\n  const { data } = parseDataUri(image.src)\n  const gifReader = new GifReader(data)\n  const framesNum = gifReader.numFrames()\n  const { width: rawWidth, height: rawHeight } = gifReader\n  const GIF_COLOR_DEPTH = 4\n  const frames = []\n  for(let i = 0; i < framesNum; i++) {\n    const framePixels = new Uint8ClampedArray(rawWidth * rawHeight * GIF_COLOR_DEPTH)\n    gifReader.decodeAndBlitFrameRGBA(i, framePixels)\n    const frameData = new ImageData(framePixels, rawWidth, rawHeight)\n    frames.push(zipFrameData(frameData, image))\n  }\n  return frames\n}\n\n/**\n * 获取非gif图像信息\n *\n * @param {HTMLImageElement} image\n * @returns\n */\nfunction noGif(image) {\n  const canvas = document.createElement('canvas')\n  const ctx = canvas.getContext('2d')\n  const ratio = image.width / image.naturalWidth\n  // 将画布内容缩放到与当前图像一致\n  canvas.width = image.width\n  canvas.height = image.height\n  ctx.scale(ratio, ratio)\n  // 绘制当前图像到canvas上\n  ctx.drawImage(image, 0, 0)\n  const imageData = ctx.getImageData(0, 0, image.width, image.height)\n  return [imageData]\n}\n\n\n/**\n * 获取图像信息\n *\n * @export\n * @param {HTMLImageElement} image\n * @param {File} file\n * @returns\n */\nexport function getImageDatas(image, file) {\n  const type = getImageType(file.type)\n  if (type === 'GIF') {\n    return gif(image)\n  } else {\n    return noGif(image)\n  }\n}\n","import React from 'react'\nimport Divide from './component/Divide'\nimport Button from './component/Button'\nimport FramesModal from './component/FramesModal'\nimport TransformSetting from './component/TransformSetting'\nimport Row from './component/Row'\nimport ImagePreviewUpload from './component/ImagePreviewUpload'\nimport { transformImageFrame } from './tools/imageToText'\nimport { getImageDatas } from './tools/imageParser'\n\nexport default class App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      transformWidth: '',\n      transformResult: [],\n      rawImage: null,\n      file: null\n    }\n    this.imagePreview = React.createRef()\n    this.framesModal = React.createRef()\n  }\n\n  setImageAndFile = (rawImage, file) => {\n    this.setState({rawImage, file})\n  }\n\n  setTransformType = (ev) => {\n    this.setState({\n      transformType: ev.target.value\n    })\n  }\n\n  setTransformWidth = (ev) => {\n    const value = ev.target.value\n    // 退格到无数字时，设置为0\n    const nextNumber = value.length ? parseInt(value, 10) : 0\n    // 值为非数字时，直接返回\n    if (isNaN(nextNumber)) {\n      return\n    }\n    this.setState({\n      // 设置为字符串，防止出现0开头数字的不正确显示\n      transformWidth: nextNumber.toString()\n    })\n  }\n\n  rescale = () => {\n    this.imagePreview.current.scaleImageContainer()\n  }\n\n  /**\n   * 图片转字符\n   *\n   * @memberof App\n   */\n  transform = () => {\n    /**\n     * @type {HTMLImageElement}\n     */\n    const image = this.imagePreview.current.getCurrentImage()\n    const file = this.state.file\n    const imageDatas = getImageDatas(image, file)\n    const frames = imageDatas.map(imageData => {\n      return transformImageFrame(imageData)\n    })\n    this.setState({\n      transformResult: frames\n    }, () => {\n      this.framesModal.current.open()\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <header>\n          <h1 className=\"text-center\">图片转字符画工具</h1>\n        </header>\n        <Divide/>\n        <Row className=\"transform-settings-wrapper\">\n          <TransformSetting label=\"目标图片宽度:\" labelFor=\"transform-size\">\n            <input type=\"number\" id=\"transform-size\" className=\"transform-size-input\" name=\"transform-size\" value={this.state.transformWidth} onChange={this.setTransformWidth} />\n          </TransformSetting>\n          {/* <TransformSetting label=\"是否着色:\" labelFor=\"transform-color\">\n            <input type=\"checkbox\" id=\"transform-color\" className=\"transform-color-checkbox\" name=\"transform-color\" value={this.state.transformColor} onChange={this.setTransformColor} />\n          </TransformSetting> */}\n          <Button onClick={this.rescale}>重新缩放</Button>\n          <Button onClick={this.transform}>开始转化</Button>\n        </Row>\n        <Divide/>\n        <Row>\n          <ImagePreviewUpload file={this.state.file} image={this.state.rawImage} setImageAndFile={this.setImageAndFile} previewWidth={parseInt(this.state.transformWidth)} ref={this.imagePreview}></ImagePreviewUpload>\n        </Row>\n        <FramesModal ref={this.framesModal} frames={this.state.transformResult} file={this.state.file} />\n      </div>\n    )\n  }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './style/normalize.css'\nimport './style/index.css'\n\nif (module.hot) {\n  module.hot.accept()\n}\n\nReactDOM.render(<App />, document.getElementById('app'))\n"],"sourceRoot":""}